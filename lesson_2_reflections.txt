What happens when you initialize a repository? Why do you need to do it?
A empty repository is created when you first initialize the directory. We need to initialize the
directory in order to create a new git repository that will track the files.

How is the staging area different from the working directory and the repository? What value do you think it offers?
Staging area allows us to commit bunch of files chosen to be commited which we think to be commited. 

How can you use the staging area to make sure you have one commit per logical change?
Before commiting the changes we can add the file to the staging area and compare it with the latest commit during which we can make sure the changes we have to make and then perform commit on it.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
If we are not sure about the changes that we want to make to the project and use it as an experimental version of the project then creating a new branch separately from the master branch would preserve our original project as is and help us make any changes we want to make in our experimental branch as it is now separate from master branch.

How do the diagrams help you visualize the branch structure?
They help us understand the flow of several branches in a better way.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
The code in the file gets merged and the commit ids of the branch that we are merging get merged into the branch that we are merging it. Then the commit ids of the branch that we are merging are now reachable from the merged branch say the master branch. We represent the branches in a diagram so that we understand the reachability of the commits as well as the parents of each commit as well as the branches in a better way.